elasticsearch:
  enabled: true
  # image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3 This will not work...
  # If you're running in production, set this to 3 and comment out antiAffinity below
  replicas: 1
  minimumMasterNodes: 1
  # Set replicas to 1 and uncomment this to allow the instance to be scheduled on
  # a master node when deploying on a single node Minikube / Kind / etc cluster.
  antiAffinity: "soft"
  # If you are running a multi-replica cluster, comment this out
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
  # # Shrink default JVM heap.
  esJavaOpts: "-Xmx384m -Xms384m"
  # Allocate smaller chunks of memory per pod.
  resources:
    requests:
      cpu: "100m"
      memory: "768M"
    limits:
      cpu: "1000m"
      memory: "768M"

neo4j:
  enabled: true
  image:
    repository: neo4j
    tag: 5.11.0
  nameOverride: neo4j
  neo4j:
    name: neo4j
    edition: "community"
    acceptLicenseAgreement: "yes"
    defaultDatabase: "graph.db"
    passwordFromSecret: neo4j-secrets
  # Set security context for pod
  securityContext:
    runAsNonRoot: true
    runAsUser: 7474
    runAsGroup: 7474
    fsGroup: 7474
    fsGroupChangePolicy: "Always"
  # Disallow privilegeEscalation on container level
  containerSecurityContext:
    allowPrivilegeEscalation: false
  volumes:
    data:
      mode: "defaultStorageClass"
      defaultStorageClass:
        requests:
          storage: 1Gi

mysql:
  enabled: true
  image:
    repository: bitnami/mysql
    tag: 8.0.32-debian-11-r26
  auth:
    existingSecret: mysql-secrets
  primary:
    extraFlags: "--character-set-server=utf8mb4 --collation-server=utf8mb4_bin"

# Bitnami version of Kafka that deploys open source Kafka https://artifacthub.io/packages/helm/bitnami/kafka
kafka:
  enabled: true
  image:
    repository: bitnami/kafka
    tag: 3.6.1-debian-12-r12
  listeners:
    client:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
  controller:
    replicaCount: 0
  broker:
    replicaCount: 1
    # The new minId for broker is 100. If we don't override this, the broker will have id 100
    # and cannot load the partitions. So we set minId to 0 to be backwards compatible
    minId: 0
    # These server properties are no longer exposed as parameters in the bitnami kafka chart since 24.0.0
    # They need to be passed in through extraConfig. See below for reference
    # https://github.com/bitnami/charts/tree/main/bitnami/kafka#to-2400
    extraConfig: |
      message.max.bytes=5242880
      default.replication.factor=1
      offsets.topic.replication.factor=1
      transaction.state.log.replication.factor=1
  kraft:
    enabled: false
  zookeeper:
    enabled: true